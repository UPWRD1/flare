package Option = 
    enum Option[?T] =
        Some { ?T },
        None

    let unwrap_or : Option[?T] -> ?T -> ?T o fallback =
        match o 
            | Some {n} then n,
            | None then fallback,

    let unwrap : Option[?T] -> ?T o =
        match o
            | Some {n} then n,
            | None then exit n,
    
    let is_some : Option[?T] -> bool x =
        match x
            | Some {_} then true,
            | None then false,
