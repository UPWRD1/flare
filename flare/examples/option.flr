package Option = 
    enum Option[?T] =
        Some { ?T },
        None

    let unwrap_or o fallback : Option[?T] -> ?T -> ?T =
        match o
            | Some {n} then n,
            | None then fallback,

    let unwrap o : Option[?T] -> ?T =
        match o
            | Some {n} then n,
            | None then exit n,
    
    let is_some x : Option[?T] -> bool =
        match x
            | Some {_} then true,
            | None then false,
